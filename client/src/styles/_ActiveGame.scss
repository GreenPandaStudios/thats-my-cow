// The main "ActiveGame" wrapper
@import "./Variables.scss";

$transition-speed: 0.3s;
$primary-color: #007bff;
$secondary-color: #28a745;
$negative-color: #ff0000;

.ActiveGame {
	// Simple fade-in + slight upward motion
	@include fadeInUp;

	display: flex;
	flex-direction: column;
	align-items: center;
	margin-top: 2rem;
	animation: fadeInUp 0.6s ease forwards;

	.contentContainer {
		display: flex;
		flex-direction: row;
		align-items: flex-start;
		justify-content: center;
		gap: 2rem;

		@media (max-width: 600px) {
			flex-direction: column;
			align-items: center;
		}

		// Scoreboard container
		.scoreBoardCotnainer {
			background-color: #fafafa;
			border-radius: 8px;
			box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
			padding: 1rem;
			animation: fadeInUp 0.8s ease forwards;

			.ScoreBoard {
				ol {
					list-style: none;
					padding: 0;
					margin: 0;

					li {
						margin: 1rem 0;

						.PlayerDisplay {
							display: flex;
							flex-direction: column;
							align-items: center;

							.textContainer {
								text-align: center;

								h2 {
									margin: 0;
									font-size: 1.5rem;
								}

								p {
									margin: 0.5rem 0;
									font-size: 1.2rem;
								}
							}

							.buttonContainer {
								display: flex;
								gap: 0.5rem;
								margin-top: 1rem;

								button {
									padding: 0.5rem 1rem;
									border: none;
									border-radius: 4px;
									cursor: pointer;
									color: #fff;
									transition: background-color $transition-speed ease,
										transform $transition-speed ease;

									&:hover {
										transform: translateY(-2px);
									}

									// Example color-coded buttons
									&.killButton {
										background-color: $negative-color;
										position: relative;

										&::before {
											content: "üíÄ KILL! üíÄ";
											position: absolute;
											top: -60px;
											left: 50%;
											transform: translateX(-50%) scale(0.8) rotate(-10deg);
											background-color: $negative-color;
											color: #fff;
											padding: 0.5rem 1rem;
											border-radius: 8px;
											font-size: 1rem;
											font-weight: bold;
											box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
											opacity: 0;
											transition: all 0.3s ease;
											animation: wiggle 1s infinite;
										}
										&.animate {
											&::before {
												opacity: 1;
												transform: translateX(-50%) scale(1.5) rotate(0deg);
											}
										}

										@keyframes wiggle {
											0%,
											100% {
												transform: translateX(-50%) rotate(-10deg)
													translateY(-20px);
											}
											50% {
												transform: translateX(-50%) rotate(10deg)
													translateY(-2px);
											}
										}
									}

									&.marryButton {
										background-color: $secondary-color;
										position: relative;

										&::before {
											content: "üíç MARRY! üíç";
											position: absolute;
											top: -60px;
											left: 50%;
											transform: translateX(-50%) scale(0.8) rotate(-10deg);
											background-color: $secondary-color;
											color: #fff;
											padding: 0.5rem 1rem;
											border-radius: 8px;
											font-size: 1rem;
											font-weight: bold;
											box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
											opacity: 0;
											transition: all 0.3s ease;
											animation: bounce 1s infinite;
										}
										&.animate {
											&::before {
												opacity: 1;
												transform: translateX(-50%) scale(1.5) rotate(0deg);
											}
										}

										@keyframes bounce {
											0%,
											100% {
												transform: translateX(-50%) translateY(-10px);
											}
											50% {
												transform: translateX(-50%) translateY(-20px);
											}
										}
									}

									&.myCowButton {
										background-color: $primary-color;
										position: relative;

										&::before {
											content: "üêÑ MY COW! üêÑ";
											position: absolute;
											top: -60px;
											left: 50%;
											transform: translateX(-50%) scale(0.8) rotate(-10deg);
											background-color: $primary-color;
											color: #fff;
											padding: 0.5rem 1rem;
											border-radius: 8px;
											font-size: 1rem;
											font-weight: bold;
											box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
											opacity: 0;
											transition: all 0.3s ease;
											animation: shake 1s infinite;
										}
										&.animate {
											&::before {
												opacity: 1;
												transform: translateX(-50%) scale(1.5) rotate(0deg);
											}
										}

										@keyframes shake {
											0%,
											100% {
												transform: translateX(-50%) rotate(-10deg);
											}
											50% {
												transform: translateX(-50%) rotate(10deg);
											}
										}
									}
								}
							}
							padding-bottom: 1rem;
						}
						border-bottom: 1px solid #ddd;
					}
				}
			}
		}

		// Log container
		.logContainer {
			background-color: #fff;
			border-radius: 8px;
			box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
			padding: 1rem;
			max-width: 400px;
			animation: fadeInUp 1s ease forwards;
			.Log {
				max-height: 300px;
				overflow-y: auto;
				padding-right: 0.5rem;

				p {
					margin: 0.5rem 0;
					font-size: 0.9rem;
					color: #555;
					animation: floatIn 0.8s ease forwards;
					.name {
						font-weight: 600;
						margin-bottom: 0.5rem;
						background-color: #555;
						color: #fff;
						border-radius: 0.25rem;
						padding: 0;
						padding-left: 0.25rem;
						padding-right: 0.25rem;
					}

					.actionKilled {
						color: $negative-color;
					}

					.actionMarried {
						color: $secondary-color;
					}

					.actionClaimed {
						color: $primary-color;
					}

					.number {
						font-weight: 600;
					}
				}

				@keyframes floatIn {
					0% {
						opacity: 0;
						height: 0;
						transform: translateY(-10px);
					}
					100% {
						opacity: 1;
						height: 2rem;
						transform: translateY(0);
					}
				}
			}
		}
	}

	// End game button
	.endGameButton {
		margin-top: 2rem;
		background-color: #ff0000;
		color: #ffffff;
		font-size: 1.5rem;
		padding: 0.5rem 1.5rem;
		border: none;
		border-radius: 5px;
		cursor: pointer;
		transition: background-color $transition-speed ease,
			transform $transition-speed ease;

		&:hover {
			background-color: #ff4d4f;
			transform: translateY(-2px);
		}
	}
}
