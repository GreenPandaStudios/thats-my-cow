.ActiveGame {
	display: flex;
	flex-direction: column;
	width: 100%;
	align-items: center; /* Centers horizontally */
	justify-content: center; /* Centers vertically */
	position: relative; /* Establishes positioning context */
	animation: fadeIn 0.5s ease-in-out; /* Fade in the game container */

	.ScoreBoard {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		gap: 0.5rem;
		width: 100%;

		& > * {
			flex: 0 1 calc(50% - 0.5rem); /* Two items per row with gap consideration */
		}

		animation: slideDown 0.6s ease-out; /* Slide down animation for scoreboard */
	}
}

.PlayerDisplay {
	background-color: #56a9e0; // Blue background
	padding: 0.5rem 1rem;
	max-width: 9rem;
	border-radius: 1rem;
	margin-bottom: 15px;
	box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
	transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transition for hover effects */

	&:hover {
		transform: translateY(-5px);
		box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
	}

	.textContainer {
		display: flex;
		flex-direction: row;
		align-items: center;
		.playerName {
			flex: 1 1 auto;
			margin: auto;
			font-size: 1.4rem; /* Reduced from 2rem */
			text-align: center;
			text-transform: uppercase;
			margin-top: 0;
			white-space: nowrap; /* Prevent wrapping */
			overflow: hidden; /* Hide overflow */
			text-overflow: ellipsis; /* Add ellipsis for long names */
		}
		text-align: center;
		.score {
			position: relative;
			top: -2rem;
			right: 0rem;
			text-align: left;
			font-size: 2.5rem;
			font-weight: bold;
			color: white;
			&.scoreChanged {
				animation: scoreChange 0.5s ease-out, pulse 0.5s infinite alternate;
			}
		}

		@keyframes scoreChange {
			0% {
				transform: scale(1) rotate(0deg) translateY(0);
				color: white;
			}
			10% {
				transform: scale(1.5) rotate(-12deg) translateY(-15px);
			}
			20% {
				transform: scale(1.8) rotate(8deg) translateX(10px);
				color: #ffcc00; /* Just one accent color */
			}
			30% {
				transform: scale(1.6) rotate(-20deg) translateY(5px) translateX(-15px);
			}
			40% {
				transform: scale(1.9) rotate(15deg) translateY(-20px);
			}
			50% {
				transform: scale(1.7) rotate(-10deg) translateX(20px);
				color: white;
			}
			60% {
				transform: scale(1.8) rotate(25deg) translateY(10px) translateX(-10px);
			}
			70% {
				transform: scale(1.5) rotate(-18deg) translateY(-15px) translateX(5px);
			}
			80% {
				transform: scale(1.7) rotate(12deg) translateX(-20px);
				color: #ffcc00;
			}
			90% {
				transform: scale(1.4) rotate(-5deg) translateY(8px);
			}
			100% {
				transform: scale(1) rotate(0deg) translateY(0);
				color: white;
			}
		}
	}
	.buttonContainer {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		align-items: center;

		button {
			flex: 0 0 auto;
			text-align: center;
			width: 4rem; /* Fixed width for all buttons */
			height: 4rem; /* Make height equal to width for square buttons */
			margin: 2px; /* Add some spacing between buttons */
			font-size: 2rem; /* Adjust font size as needed */
			text-justify: center;
			border: none;
			border-radius: 1rem;
			transition: all 0.2s ease-in-out;

			&:hover {
				transform: scale(1.1);
				box-shadow: 0 0 10px rgba(86, 169, 224, 0.6);
			}

			&:active {
				transform: scale(0.95);
			}
		}
	}

	/* Button animation classes */
	.myCowButton.animate {
		animation: cowJump 2s ease-in-out;
		background-color: #ffcc00;
	}

	.marryButton.animate {
		animation: heartBeat 2s ease-in-out;
		background-color: #ff6b8b;
	}

	.killButton.animate {
		animation: shake 2s ease-in-out;
		background-color: #ff4136;
	}

	/* Animation keyframes */
	@keyframes cowJump {
		0% {
			transform: scale(1);
		}
		20% {
			transform: scale(1.4) translateY(-20px) rotate(5deg);
		}
		40% {
			transform: scale(1.2) translateY(-10px) rotate(15deg);
		}
		60% {
			transform: scale(1.3) translateY(-5px) rotate(-15deg);
		}
		80% {
			transform: scale(1.1) translateY(-12px) rotate(5deg);
		}
		100% {
			transform: scale(1) rotate(0);
		}
	}

	@keyframes heartBeat {
		0% {
			transform: scale(1);
		}
		14% {
			transform: scale(1.5) rotate(5deg);
		}
		28% {
			transform: scale(0.9) rotate(-5deg);
		}
		42% {
			transform: scale(1.6) rotate(8deg);
		}
		56% {
			transform: scale(0.8) rotate(-8deg);
		}
		70% {
			transform: scale(1.4) rotate(5deg);
		}
		85% {
			transform: scale(0.9) rotate(-3deg);
		}
		100% {
			transform: scale(1) rotate(0);
		}
	}

	@keyframes shake {
		0% {
			transform: translateX(0) rotate(0);
		}
		10% {
			transform: translateX(-10px) rotate(-10deg);
		}
		20% {
			transform: translateX(12px) rotate(12deg);
		}
		30% {
			transform: translateX(-14px) rotate(-8deg);
		}
		40% {
			transform: translateX(10px) rotate(10deg);
		}
		50% {
			transform: translateX(-8px) rotate(-12deg);
		}
		60% {
			transform: translateX(14px) rotate(7deg);
		}
		70% {
			transform: translateX(-12px) rotate(-10deg);
		}
		80% {
			transform: translateX(8px) rotate(12deg);
		}
		90% {
			transform: translateX(-6px) rotate(-6deg);
		}
		100% {
			transform: translateX(0) rotate(0);
		}
	}
}

.Log {
	display: none;
}

.endGameButton {
	background-color: #ff4136; // Red background
	color: white;
	padding: 0.5rem 1rem;
	border: none;
	border-radius: 1rem;
	cursor: pointer;
	font-size: 1.2rem;
	transition: background-color 0.3s ease, transform 0.3s ease;

	&:hover {
		background-color: darken(#ff4136, 10%);
		transform: translateY(-2px);
	}

	&:active {
		transform: translateY(0);
	}
}

/* Define animations */
@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes slideDown {
	from {
		transform: translateY(-20px);
		opacity: 0;
	}
	to {
		transform: translateY(0);
		opacity: 1;
	}
}

@keyframes pulse {
	from {
		transform: scale(1);
	}
	to {
		transform: scale(1.5);
	}
}
